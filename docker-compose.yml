version: '3'
services:
  tsugi-codetest:
    container_name: tsugi_codetest_container
    image: tsugi_codetest_img
    restart: unless-stopped
    depends_on:
      - tsugi-mysql-db
      - spring-codetest
    environment:
      TSUGI_DOMAIN: ${TSUGI_DOMAIN}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASSWORD}
      SPRING_CODETEST_URL: ${SPRING_URL}
      SPRING_CODETEST_PORT: ${SPRING_PORT}
      XML_EVALUATOR_URL: ${XML_EVALUATOR_URL}
      XML_EVALUATOR_PORT: ${XML_EVALUATOR_PORT}
      CODETEST_REST_FILE_PATH: ${CODETEST_REST_FILE_PATH}
      TSUGI_ADMIN_PASSWORD: ${TSUGI_ADMIN_PASSWORD}
      TSUGI_LANG: ${TSUGI_LANG}
      TSUGI_GOOGLE_CLIENT_SECRET: ${TSUGI_GOOGLE_CLIENT_SECRET}
      TSUGI_GOOGLE_CLIENT_ID: ${TSUGI_GOOGLE_CLIENT_ID}
      TSUGI_OWNER_NAME: ${TSUGI_OWNER_NAME}
      TSUGI_OWNER_EMAIL: ${TSUGI_OWNER_EMAIL}
      TSUGI_PROVIDE_KEYS: ${TSUGI_PROVIDE_KEYS}
      TSUGI_DEVELOPER_MODE: ${TSUGI_DEVELOPER_MODE}
      TSUGI_MAIL_DOMAIN: ${TSUGI_MAIL_DOMAIN}
      TSUGI_MAIL_SECRET: ${TSUGI_MAIL_SECRET}
      CENTRAL_REPOSITORY_USER: ${CENTRAL_REPOSITORY_USER}
      CENTRAL_REPOSITORY_PASS: ${CENTRAL_REPOSITORY_PASS}
      AK_BASE_URL: ${AK_BASE_URL}
      AK_USER: ${AK_USER}
      AK_PASS: ${AK_PASS}
    build:
      context: ./tsugi/
      dockerfile: Dockerfile_tsugi-ct
      args:
        TSUGI_BRANCH: ${TSUGI_BRANCH}
        CODETEST_BRANCH: ${CODETEST_BRANCH}
    command: bash -c "/var/www/html/tsugi/mod/codetest/init-tsugi.sh"
    stdin_open: true
    tty: true
    volumes:
      - "./tsugi/config_tsugi_docker.php:/var/www/html/tsugi/config.php:rw"
      - "./tsugi/config_codetest_docker.php:/var/www/html/tsugi/mod/codetest/config.php:rw"
      - "./tsugi/msmtprc:/etc/msmtprc:ro"
  spring-codetest:
    container_name: spring_codetest_container
    image: spring_codetest_img
    restart: unless-stopped
    environment:
      MONGO_HOST: ${MONGODB_HOSTNAME}
      MONGO_PORT: ${MONGODB_PORT}
      MONGO_USER: ${MONGODB_USERNAME}
      MONGO_PASS: ${MONGODB_PASSWORD}
      MONGO_DDBB: ${MONGODB_DATABASE}
      JWT_SECRET: ${SPRING_JWT_SECRET}
      REGISTER_SECRET: ${CENTRAL_REPOSITORY_REGISTER_PASS}
    build:
      context: ./central-repository/
      dockerfile: Dockerfile_repo
      args:
          REPO_BRANCH: ${REPO_BRANCH}
    depends_on:
      - spring-mongo-db
    volumes:
      - './central-repository/application.properties:/app/questions-storage/src/main/resources/application.properties:rw'
      - 'spring-files:/codetest'
  xml-validator:
    container_name: xml-validator_container
    image: xml-validator_img
    restart: unless-stopped
    build:
      context: ./validators/
      dockerfile: Dockerfile_xml_validator
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        XML_VALIDATOR_BRANCH: ${XML_VALIDATOR_BRANCH}
    environment:
      FEEDBACK_MANAGER_URL: ${FEEDBACK_MANAGER_URL}
      BASE_URL: ${XML_EVALUATOR_REQUESTS_BASE_URL}/api
      PORT: ${XML_EVALUATOR_PORT}
      EMAIL: ${XML_EVALUATOR_REQUESTS_EMAIL}
      PASSWORD: ${XML_EVALUATOR_REQUESTS_PASSWORD}
  java-validator:
    container_name: java-validator_container
    image: java-validator_img
    restart: unless-stopped
    build:
      context: ./validators/
      dockerfile: Dockerfile_java_validator
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        NODE_VERSION: ${NODE_VERSION}
        JAVA_VALIDATOR_BRANCH: ${JAVA_VALIDATOR_BRANCH}
    environment:
      FEEDBACK_MANAGER_URL: ${FEEDBACK_MANAGER_URL}
      BASE_URL: ${XML_EVALUATOR_REQUESTS_BASE_URL}/api
      PORT: ${XML_EVALUATOR_PORT}
      EMAIL: ${XML_EVALUATOR_REQUESTS_EMAIL}
      PASSWORD: ${XML_EVALUATOR_REQUESTS_PASSWORD}
    volumes:
      - './validators/src_volume/java-evaluator/server/dev-server:/app/java-evaluator/server/dev-server'
  feedback-manager:
    container_name: feedback-manager_container
    image: feedback-manager_img
    restart: unless-stopped
    environment:
      PORT: ${FEEDBACK_MANAGER_PORT}
    build:
      context: ./validators/
      dockerfile: Dockerfile_feedback_manager
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        PORT: ${FEEDBACK_MANAGER_PORT}
        FEEDBACK_MANAGER_BRANCH: ${FEEDBACK_MANAGER_BRANCH}
  tsugi-mysql-db:
    container_name: tsugi_mysql_db_container
    image: 'mysql:5.7'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - 'mysql_data_container:/var/lib/mysql:delegated'
  spring-mongo-db:
    container_name: spring_mongo_db_container
    image: 'mongo:4.4.9'
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - 'mongodb_data_container:/data/db'
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  nginx:
    container_name: nginx_container
    image: nginx
    restart: unless-stopped
    depends_on:
      - tsugi-codetest
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./gateway:/app/static
      - ./nginx/certs:/opt/certs
    ports:
      - "80:80"
      - "443:443"
    environment:
      NGINX_SPRING_REPO_URL: ${NGINX_SPRING_REPO_URL}
      NGINX_APPLICATION_URL: ${NGINX_APPLICATION_URL}
      NGINX_TSUGI_URL: ${NGINX_TSUGI_URL}
volumes:
  mongodb_data_container:
  mysql_data_container:
  spring-files:
