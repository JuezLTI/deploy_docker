version: '3'
services:
  tsugi-codetest:
    container_name: tsugi_codetest_container
    image: tsugi_codetest_img
    restart: unless-stopped
    depends_on:
      - tsugi-mysql-db
      - spring-codetest
    environment:
      TSUGI_DOMAIN: ${TSUGI_DOMAIN}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASSWORD}
      SPRING_CODETEST_URL: ${SPRING_URL}
      SPRING_CODETEST_PORT: ${SPRING_PORT}
      XML_EVALUATOR_URL: ${XML_EVALUATOR_URL}
      XML_EVALUATOR_PORT: ${XML_EVALUATOR_PORT}
      CODETEST_REST_FILE_PATH: ${CODETEST_REST_FILE_PATH}
      TSUGI_ADMIN_PASSWORD: ${TSUGI_ADMIN_PASSWORD}
      TSUGI_LANG: ${TSUGI_LANG}
      TSUGI_GOOGLE_CLIENT_SECRET: ${TSUGI_GOOGLE_CLIENT_SECRET}
      TSUGI_GOOGLE_CLIENT_ID: ${TSUGI_GOOGLE_CLIENT_ID}
      TSUGI_OWNER_NAME: ${TSUGI_OWNER_NAME}
      TSUGI_OWNER_EMAIL: ${TSUGI_OWNER_EMAIL}
    build:
      context: ./tsugi/
      dockerfile: Dockerfile_tsugi-ct
    ports:
      - 80:80
    command: bash -c "/var/www/html/tsugi/mod/codetest/init-tsugi.sh"
    stdin_open: true
    tty: true
    volumes:
      - "./volumes/tsugi:/var/www/html/tsugi:rw"
      - "./volumes/codetest:/var/www/html/tsugi/mod/codetest:rw"
  spring-codetest:
    container_name: spring_codetest_container
    image: spring_codetest_img
    restart: unless-stopped
    environment:
      MONGO_HOST: ${MONGODB_HOSTNAME}
      MONGO_PORT: ${MONGODB_PORT}
      MONGO_USER: ${MONGODB_USERNAME}
      MONGO_PASS: ${MONGODB_PASSWORD}
      MONGO_DDBB: ${MONGODB_DATABASE}
      JWT_SECRET: ${SPRING_JWT_SECRET}
      REGISTER_SECRET: ${CENTRAL_REPOSITORY_REGISTER_PASS}
    build:
      context: ./central-repostitory/
      dockerfile: Dockerfile_repo
    depends_on:
      - spring-mongo-db
    ports:
      - 8079:8080
    volumes:
      - './volumes/central-repository:/app/questions-storage:rw'
      - 'spring-files:/codetest'
  xml-validator:
    container_name: xml-validator_container
    image: xml-validator_img
    restart: unless-stopped
    build:
      context: ./validators/
      dockerfile: Dockerfile_validator
    environment:
      FEEDBACK_MANAGER_URL: ${FEEDBACK_MANAGER_URL}
      BASE_URL: ${XML_EVALUATOR_REQUESTS_BASE_URL}/api
      PORT: ${XML_EVALUATOR_PORT}
      EMAIL: ${XML_EVALUATOR_REQUESTS_EMAIL}
      PASSWORD: ${XML_EVALUATOR_REQUESTS_PASSWORD}
    ports:
      - 3001:3000
    volumes:
      - './volumes/xml-evaluator:/app:rw'
  feedback-manager:
    container_name: feedback-manager_container
    image: feedback-manager_img
    restart: unless-stopped
    environment:
      PORT: ${FEEDBACK_MANAGER_PORT}
    build:
      context: ./validators/
      dockerfile: Dockerfile_feedback_manager
      args:
        PORT: ${FEEDBACK_MANAGER_PORT}
    ports:
      - 3004:3003
    volumes:
      - './volumes/feedback-manager/minimal feedback:/app:rw'
  tsugi-mysql-db:
    container_name: tsugi_mysql_db_container
    image: 'mysql:5.7'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3307:3306
    volumes:
      - 'mysql_data_container:/var/lib/mysql:delegated'
  spring-mongo-db:
    container_name: spring_mongo_db_container
    image: 'mongo:4.4.9'
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    ports:
      - 27018:27017
    volumes:
      - 'mongodb_data_container:/data/db'
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
volumes:
  mongodb_data_container:
  mysql_data_container:
  spring-files:
