FROM php:8.2-apache

ARG TSUGI_BRANCH=${TSUGI_BRANCH}
ARG CODETEST_BRANCH=${CODETEST_BRANCH}

WORKDIR /git-clones

RUN apt-get update && apt-get install -y git netcat-traditional libzip-dev zip  msmtp mailutils && apt-get clean -y
RUN docker-php-ext-install pdo pdo_mysql mysqli zip
RUN a2enmod rewrite


RUN cp "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
RUN sed -i "s/\(;sendmail_path.*\)/\1\nsendmail_path = \/usr\/bin\/msmtp -t/" "$PHP_INI_DIR/php.ini"

# Configure msmtp to send emails
ARG TSUGI_SMTP_HOST=${TSUGI_SMTP_HOST}
ARG TSUGI_SMTP_PORT=${TSUGI_SMTP_PORT}
ARG TSUGI_SMTP_STARTTLS=${TSUGI_SMTP_STARTTLS}
ARG TSUGI_SMTP_USER=${TSUGI_SMTP_USER}
ARG TSUGI_SMTP_PASSWORD=${TSUGI_SMTP_PASSWORD}
RUN echo "account default" > /etc/msmtprc
RUN echo "host ${TSUGI_SMTP_HOST}" >> /etc/msmtprc
RUN echo "port ${TSUGI_SMTP_PORT}" >> /etc/msmtprc
RUN echo "tls on" >> /etc/msmtprc
RUN echo "tls_starttls ${TSUGI_SMTP_STARTTLS}" >> /etc/msmtprc
RUN echo "tls_trust_file /etc/ssl/certs/ca-certificates.crt" >> /etc/msmtprc
RUN echo "tls_certcheck on" >> /etc/msmtprc
RUN echo "auth on" >> /etc/msmtprc
RUN echo "user ${TSUGI_SMTP_USER}" >> /etc/msmtprc
RUN echo "password ${TSUGI_SMTP_PASSWORD}" >> /etc/msmtprc
RUN echo "from ${TSUGI_SMTP_USER}" >> /etc/msmtprc
RUN echo "logfile /var/log/msmtp.log" >> /etc/msmtprc


ENV NODE_VERSION=16.13.2
ENV NVM_DIR=/root/.nvm
RUN apt install -y curl
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"


RUN git clone --branch ${TSUGI_BRANCH} https://github.com/JuezLTI/tsugi.git
RUN mkdir -p /var/www/html/
RUN cp -R tsugi/ /var/www/html/

# WORKDIR /var/www/html/tsugi
# RUN cp config_docker.php config.php

RUN git clone --branch ${CODETEST_BRANCH} https://github.com/JuezLTI/codetest.git
RUN mkdir -p /var/www/html/tsugi/mod/
RUN cp -R codetest/ /var/www/html/tsugi/mod/

WORKDIR /var/www/html/tsugi/mod/codetest
# RUN cp config_docker.php config.php
RUN cp init-tsugi.sh /var/www/html/tsugi/admin/init-tsugi.sh

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN composer install

RUN npm ci
RUN npm run build

RUN mkdir tmp && chmod 777 tmp

RUN cd /tmp && mkdir codetest && chmod 777 codetest

WORKDIR /var/www/html/tsugi/mod
RUN chmod 777 codetest

WORKDIR /var/www/html/tsugi/admin

EXPOSE 80

ENTRYPOINT ["/bin/bash", "init-tsugi.sh"]
